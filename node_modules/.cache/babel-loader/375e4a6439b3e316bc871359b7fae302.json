{"ast":null,"code":"import _toConsumableArray from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\REACT APEX\\\\src\\\\views\\\\charts\\\\echartjs\\\\echart.js\";\nimport ReactEcharts from \"echarts-for-react\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\"; //import { populationDataFemale } from \"./DataFemale\";\n//import { populationDataMale } from \"./DataMale\";\n\nimport { deathData } from \"./deathData\";\nimport { sunburstData } from \"./sunburstData\";\nimport Apexchart from \"react-apexcharts\";\nimport { sgdeathseries, sg100kseries, ukdeathseries, uk100kseries, sgconsumerseries, ukconsumerseries, sgconsumerpriceseries, ukconsumerpriceseries, sgyearprice, ukyearprice, sgctystackseries, ukctystackseries, sgdeaths, mydeaths, myndeaths, phdeaths, thdeaths, vndeaths } from \"./agedeathData\";\n\nvar echart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(echart, _Component);\n\n  function echart(props) {\n    var _this;\n\n    _classCallCheck(this, echart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(echart).call(this, props));\n    _this.plcoptionholder = [];\n    _this.country = \"\";\n    _this.checkcountry = \"\";\n\n    _this.getSunBurstOption = function () {\n      //console.log(sunburstData)\n      return {\n        baseOption: {\n          title: {\n            //text: 'WORLD COFFEE RESEARCH SENSORY LEXICON',\n            //subtext: 'Source: https://worldcoffeeresearch.org/work/sensory-lexicon/',\n            textStyle: {\n              fontSize: 14,\n              align: 'center'\n            },\n            subtextStyle: {\n              align: 'center'\n            } //sublink: 'https://worldcoffeeresearch.org/work/sensory-lexicon/'\n\n          },\n          series: {\n            type: 'sunburst',\n            highlightPolicy: 'ancestor',\n            data: sunburstData,\n            radius: [5, '95%'],\n            sort: null,\n            label: {\n              rotate: 'radial'\n            },\n            itemStyle: {\n              borderWidth: 1\n            }\n          },\n          tooltip: {\n            show: true // include tooltip component for the feature\n\n          }\n          /* toolbox: {\r\n             show: true,\r\n             showTitle: false, // hide the default text so they don't overlap each other\r\n             feature: {\r\n               saveAsImage: {\r\n                 show: true,\r\n                 title: 'Save As Image'\r\n               },\r\n               dataView: {\r\n                 show: false,\r\n                 title: 'Data View'\r\n               },\r\n             },\r\n           },*/\n\n        }\n      }; //console.log(sunburstData)\n    };\n\n    _this.getRCOption = function () {\n      var i = 0;\n      var j = 0;\n      var alldata = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\n      var districts = [];\n      var years = [];\n      Object.entries(deathData).forEach(function (entry) {\n        years = [].concat(_toConsumableArray(years), [entry[0]]); //console.log(entry[1][0]);\n\n        console.log();\n        entry[1].forEach(function (e) {\n          districts = _toConsumableArray(new Set([].concat(_toConsumableArray(districts), [e.name])));\n          alldata[j][i] = e.name;\n          i++;\n\n          if (i == 10) {\n            i = 0;\n          }\n\n          console.log(deathData.name); //console.log([deathData.itemStyle]);\n        });\n        j++;\n      });\n      var options = years.map(function (year) {\n        var obj = {};\n        obj.title = {\n          text: \"Number of Deaths By Risk Factor in the World, \".concat(year)\n        };\n        obj.series = [{\n          data: deathData[year]\n        }];\n        return obj;\n      });\n      return {\n        baseOption: {\n          timeline: {\n            autoPlay: true,\n            axisType: \"category\",\n            bottom: 20,\n            data: years,\n            height: null,\n            inverse: true,\n            left: null,\n            orient: \"vertical\",\n            playInterval: 1000,\n            right: 0,\n            top: 20,\n            width: 55,\n            grid: {\n              containLabel: true\n            },\n            label: {\n              normal: {\n                show: true,\n                position: 'insideRight',\n                textStyle: {\n                  color: \"#aaa\"\n                }\n              },\n              emphasis: {\n                textStyle: {\n                  color: \"#333\"\n                }\n              }\n            },\n            symbol: \"none\",\n            lineStyle: {\n              color: \"#aaa\"\n            },\n            checkpointStyle: {\n              color: \"#354EF6\",\n              borderColor: \"transparent\",\n              borderWidth: 2\n            },\n            controlStyle: {\n              showNextBtn: false,\n              showPrevBtn: false,\n              normal: {\n                color: \"#354EF6\",\n                borderColor: \"#354EF6\"\n              },\n              emphasis: {\n                color: \"#5d71f7\",\n                borderColor: \"#5d71f7\"\n              }\n            }\n          },\n          color: [deathData.itemStyle],\n          //color: [\"#e91e63 \", \"#354EF6\"],\n          title: {\n            subtext: \"Data from ourworldindata.org\",\n            textAlign: \"left\",\n            left: \"5%\"\n          },\n          tooltip: {\n            backgroundColor: \"#555\",\n            borderWidth: 0,\n            padding: 10\n          },\n          legend: {\n            data: [\"Deaths\", \"Male\"],\n            itemGap: 35,\n            itemHeight: 18,\n            right: \"11%\",\n            top: 20\n          },\n          calculable: true,\n          grid: {\n            containLabel: true,\n            //top: 100,\n            //bottom: 150,\n            tooltip: {\n              trigger: \"axis\",\n              axisPointer: {\n                type: \"shadow\",\n                label: {\n                  show: true,\n                  position: 'insideRight',\n                  formatter: function formatter(params) {\n                    return params.value.replace(\"\\n\", \"\");\n                  }\n                }\n              }\n            }\n          },\n          xAxis: [{\n            axisLabel: {\n              interval: 0,\n              rotate: 55,\n              textStyle: {\n                baseline: \"top\",\n                color: \"#333\",\n                fontSize: 10,\n                fontWeight: \"bold\"\n              }\n            },\n            axisLine: {\n              lineStyle: {\n                color: \"#aaa\"\n              },\n              show: true\n            },\n            axisTick: {\n              show: false\n            },\n            roundCap: true,\n            //data: alldata[0],\n            splitLine: {\n              show: false\n            },\n            type: \"value\"\n          }],\n          yAxis: [{\n            axisLabel: {\n              show: false //textStyle: { fontSize: 10 }\n\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            //data: names,\n            data: alldata[0],\n            //name: \"Factors of Death\",\n            splitLine: {\n              lineStyle: {\n                type: \"dotted\"\n              }\n            },\n            type: \"category\"\n          }],\n          series: [{\n            //name: \"Deaths\", \n            type: \"bar\",\n            roundCap: true,\n            label: {\n              normal: {\n                show: true,\n                formatter: '{b}',\n                position: 'insideRight'\n              }\n            }\n          }]\n        },\n        options: options\n      };\n    };\n\n    _this.onSunBurstChartClick = function (params) {\n      //console.log name of segment selected\n      //console.log(params.data.name)\n      _this.checkcountry = params.data.name;\n\n      if (_this.checkcountry != \"\" && _this.checkcountry != undefined && _this.checkcountry != \"Asia\" && _this.checkcountry != \"East Asia\" && _this.checkcountry != \"South-East Asia\" && _this.checkcountry != \"West Asia\" && _this.checkcountry != \"Europe\" && _this.checkcountry != \"West Europe\" && _this.checkcountry != \"North Europe\" && _this.checkcountry != \"East Europe\" && _this.checkcountry != \"America\" && _this.checkcountry != \"North America\" && _this.checkcountry != \"South America\" && _this.checkcountry != \"Africa\" && _this.checkcountry != \"North Africa\" && _this.checkcountry != \"Central Africa\") {\n        _this.country = params.data.name;\n      }\n\n      if (_this.country == \"Singapore\") {\n        _this.setState({\n          ctydeathseries: sgdeathseries,\n          cty100kseries: sg100kseries,\n          series1: sgconsumerseries,\n          series2: sgconsumerpriceseries,\n          series3: sgyearprice,\n          plcseries: sgctystackseries,\n          //plcoptionholder: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\n          ctyseries1: sgdeaths,\n          ctyseries2: mydeaths,\n          ctyseries3: myndeaths,\n          ctyseries4: phdeaths,\n          ctyseries5: thdeaths,\n          ctyseries6: vndeaths //updateSeries()\n\n        }); //chart.updateSeries()\n\n      }\n\n      if (_this.country == \"United Kingdom\") {\n        _this.setState({\n          ctydeathseries: ukdeathseries,\n          cty100kseries: uk100kseries,\n          series1: ukconsumerseries,\n          series2: ukconsumerpriceseries,\n          series3: ukyearprice,\n          plcseries: ukctystackseries //updateSeries()\n\n        }); //chart.updateSeries()\n\n      } //ApexChart.exec(document.querySelector(\"#chart\"), 'updateSeries', this.state.genseries,true)\n\n    };\n\n    _this._onEvents = {\n      'click': _this.onSunBurstChartClick,\n      'dataZoom': _this.onDataZoom\n    };\n    _this.state = {\n      ctydeathseries: [{\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }, {\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }, {\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }],\n      cty100kseries: [{\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }, {\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }, {\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }],\n      consumeseries: [{\n        name: 'Placeholder',\n        type: 'column',\n        data: [0, 0, 0, 0] //color: \"#00BCD4\"\n\n      }, {\n        name: 'Placeholder',\n        type: 'line',\n        data: [0, 0, 0, 0] //color: \"#FF7181\"\n\n      }],\n      ctydeathoptions: {\n        chart: {\n          stacked: true,\n          toolbar: {\n            show: true\n          }\n        },\n        tooltip: {\n          enabled: true,\n          onDatasetHover: {\n            highlightDataSeries: true\n          },\n          x: {\n            show: true,\n            format: 'yyyy'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        grid: {\n          row: {\n            colors: ['#fff', '#f2f2f2']\n          }\n        },\n        colors: ['#616161', '#FFA000', '#BDBDBD'],\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: 'bottom',\n              offsetX: -10,\n              offsetY: 0\n            }\n          }\n        }],\n        plotOptions: {\n          bar: {\n            endingShape: 'rounded',\n            horizontal: false\n          }\n        },\n        //colors: [\"#00BCD4\", \"#FF7181\"],\n        xaxis: {\n          type: 'datetime',\n          categories: ['01/01/2013', '01/01/2014', '01/01/2015', '01/01/2016', '01/01/2017'] //labels: ['2013', '2014', '2015', '2016', '2017']\n\n        },\n        legend: {\n          position: 'right',\n          offsetY: 40\n        },\n        fill: {\n          opacity: 1\n        }\n      },\n      cty100koptions: {\n        chart: {\n          stacked: true,\n          toolbar: {\n            show: true\n          },\n          zoom: {\n            enabled: true\n          }\n        },\n        colors: ['#616161', '#FFA000', '#BDBDBD'],\n        grid: {\n          row: {\n            colors: ['#fff', '#f2f2f2']\n          }\n        },\n        dataLabels: {\n          enabled: true\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: 'bottom',\n              offsetX: -10,\n              offsetY: 0\n            }\n          }\n        }],\n        plotOptions: {\n          bar: {\n            endingShape: 'rounded',\n            horizontal: false\n          }\n        },\n        tooltip: {\n          enabled: true,\n          onDatasetHover: {\n            highlightDataSeries: true\n          },\n          x: {\n            show: true,\n            format: 'yyyy'\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          categories: ['01/01/2013', '01/01/2014', '01/01/2015', '01/01/2016', '01/01/2017']\n        },\n        legend: {\n          position: 'right',\n          offsetY: 40\n        },\n        fill: {\n          opacity: 1\n        }\n      },\n      consumeoptions: {\n        stroke: {\n          width: [0, 4]\n        },\n        colors: [\"#00BCD4\", \"#FF7181\"],\n        grid: {\n          row: {\n            colors: ['#fff', '#f2f2f2']\n          }\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: [{\n          title: {\n            text: 'Cigarettes Per Smoker Per Day'\n          }\n        }, {\n          opposite: true,\n          title: {\n            text: 'Price of 20-Pack of Cigarettes (US$)'\n          }\n        }],\n        chart: {}\n      },\n      series1: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      series2: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      series3: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n\n      /*\r\n            newseries1: [{\r\n              data: [19.8, 19.4, 18.9, 18.5, 18.1, 17.8, 17.5, 17.3, 17.0]\r\n            }],\r\n            newseries2: [{\r\n              data: [7.36, 7.73, 8.12, 8.45, 8.84, 9.16, 9.36, 9.87, 10.21],\r\n            }],\r\n            newseries3: [{\r\n              data: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016'],\r\n            }],\r\n      \r\n            */\n      chartOptionsLine1: {\n        chart: {\n          id: 'tw',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Cigarettes Per Smoker Per Day',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#5C6BC0']\n      },\n      chartOptionsLine2: {\n        chart: {\n          id: 'tw',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Price of a 20-Pack of Cigarettes (US$)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#00BCD4']\n      },\n      chartOptionsArea: {\n        chart: {\n          id: 'yt',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Amount of Money Spent on Cigarettes Per Year in (US$)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#E53935'] //colors: ['#00E396'],\n\n      },\n      ctystackOptions: {\n        chart: {\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        colors: ['#FFA000', '#BDBDBD'],\n        stroke: {\n          width: 1,\n          colors: ['#fff']\n        },\n        title: {//text: 'Fiction Books Sales'\n        },\n        xaxis: {\n          categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam'],\n          //categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\n          labels: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: undefined\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      plcoptions: {\n        chart: {\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            endingShape: 'rounded',\n            horizontal: true\n          }\n        },\n        colors: ['#FFA000', '#BDBDBD'],\n        stroke: {\n          width: 1,\n          colors: ['#fff']\n        },\n        title: {//text: 'Fiction Books Sales'\n        },\n        xaxis: {\n          categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam'],\n          //categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\n          labels: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: undefined\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      plcseries: [{\n        name: 'Female',\n        data: [0, 0, 0, 0, 0, 0]\n      }, {\n        name: 'Male',\n        data: [0, 0, 0, 0, 0, 0]\n      }],\n      compareOptions1: {\n        chart: {\n          id: 'tw',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Singapore (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        //colors: ['#5C6BC0'],\n        colors: ['#E53935']\n      },\n      compareOptions2: {\n        chart: {\n          id: 'tw',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Malaysia (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#5C6BC0']\n      },\n      compareOptions3: {\n        chart: {\n          id: 'yt',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Myanmar (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#8BC34A'] //colors: ['#00E396'],\n\n      },\n      compareOptions4: {\n        chart: {\n          id: 'tw',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Philippines (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#283593']\n      },\n      compareOptions5: {\n        chart: {\n          id: 'tw',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Thailand (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#FFC107']\n      },\n      compareOptions6: {\n        chart: {\n          id: 'yt',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Singapore Vietnam (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#6A1B9A'] //colors: ['#00E396'],\n\n      },\n      ctyseries1: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries2: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries3: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries4: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries5: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries6: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(echart, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986\n        },\n        __self: this\n      }, React.createElement(ReactEcharts, {\n        option: this.getRCOption(),\n        style: {\n          height: \"80vh\"\n        },\n        opts: {\n          renderer: \"svg\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000\n        },\n        __self: this\n      }, \"Country Selector\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }, React.createElement(ReactEcharts, {\n        id: \"sunburst\",\n        option: this.getSunBurstOption(),\n        style: {\n          height: \"70vh\"\n        },\n        opts: {\n          renderer: \"svg\"\n        },\n        ref: function ref(e) {\n          _this2.echarts_react = e;\n        },\n        onEvents: this._onEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: \"12\",\n        lg: \"6\",\n        xl: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsLine1,\n        series: this.state.series1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-line2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsLine2,\n        series: this.state.series2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsArea,\n        series: this.state.series3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        lg: \"6\",\n        xl: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040\n        },\n        __self: this\n      }, \"Number of Deaths Per 100k Capita from Smoking in \", this.country)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        options: this.state.cty100koptions,\n        series: this.state.cty100kseries,\n        type: \"bar\",\n        width: \"650\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043\n        },\n        __self: this\n      }))))), React.createElement(Col, {\n        sm: \"12\",\n        lg: \"6\",\n        xl: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      }, \"Smoking Prevalance of Neighbouring Countries\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        options: this.state.plcoptions,\n        series: this.state.plcseries,\n        type: \"bar\",\n        height: \"400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        lg: \"6\",\n        xl: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1067\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-line1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.compareOptions1,\n        series: this.state.ctyseries1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-line2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.compareOptions2,\n        series: this.state.ctyseries2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-area3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.compareOptions3,\n        series: this.state.ctyseries3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1078\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        sm: \"12\",\n        lg: \"6\",\n        xl: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-line4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.compareOptions4,\n        series: this.state.ctyseries4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-line5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1094\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.compareOptions5,\n        series: this.state.ctyseries5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.compareOptions6,\n        series: this.state.ctyseries6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return echart;\n}(Component);\n\nexport default echart;","map":{"version":3,"sources":["D:/REACT APEX/src/views/charts/echartjs/echart.js"],"names":["ReactEcharts","React","Component","Fragment","Row","Col","Card","CardTitle","CardHeader","CardBody","deathData","sunburstData","Apexchart","sgdeathseries","sg100kseries","ukdeathseries","uk100kseries","sgconsumerseries","ukconsumerseries","sgconsumerpriceseries","ukconsumerpriceseries","sgyearprice","ukyearprice","sgctystackseries","ukctystackseries","sgdeaths","mydeaths","myndeaths","phdeaths","thdeaths","vndeaths","echart","props","plcoptionholder","country","checkcountry","getSunBurstOption","baseOption","title","textStyle","fontSize","align","subtextStyle","series","type","highlightPolicy","data","radius","sort","label","rotate","itemStyle","borderWidth","tooltip","show","getRCOption","i","j","alldata","districts","years","Object","entries","forEach","entry","console","log","e","Set","name","options","map","year","obj","text","timeline","autoPlay","axisType","bottom","height","inverse","left","orient","playInterval","right","top","width","grid","containLabel","normal","position","color","emphasis","symbol","lineStyle","checkpointStyle","borderColor","controlStyle","showNextBtn","showPrevBtn","subtext","textAlign","backgroundColor","padding","legend","itemGap","itemHeight","calculable","trigger","axisPointer","formatter","params","value","replace","xAxis","axisLabel","interval","baseline","fontWeight","axisLine","axisTick","roundCap","splitLine","yAxis","onSunBurstChartClick","undefined","setState","ctydeathseries","cty100kseries","series1","series2","series3","plcseries","ctyseries1","ctyseries2","ctyseries3","ctyseries4","ctyseries5","ctyseries6","_onEvents","onDataZoom","state","consumeseries","ctydeathoptions","chart","stacked","toolbar","enabled","onDatasetHover","highlightDataSeries","x","format","dataLabels","row","colors","responsive","breakpoint","offsetX","offsetY","plotOptions","bar","endingShape","horizontal","xaxis","categories","fill","opacity","cty100koptions","zoom","consumeoptions","stroke","yaxis","opposite","chartOptionsLine1","id","group","axisTicks","markers","size","hover","chartOptionsLine2","chartOptionsArea","ctystackOptions","labels","val","y","horizontalAlign","plcoptions","compareOptions1","compareOptions2","compareOptions3","compareOptions4","compareOptions5","compareOptions6","renderer","echarts_react"],"mappings":"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","sourcesContent":["import ReactEcharts from \"echarts-for-react\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\r\n//import { populationDataFemale } from \"./DataFemale\";\r\n//import { populationDataMale } from \"./DataMale\";\r\nimport { deathData } from \"./deathData\";\r\nimport { sunburstData } from \"./sunburstData\";\r\nimport Apexchart from \"react-apexcharts\";\r\nimport { sgdeathseries, sg100kseries, ukdeathseries, uk100kseries, sgconsumerseries, ukconsumerseries, sgconsumerpriceseries, ukconsumerpriceseries, sgyearprice, ukyearprice, sgctystackseries, ukctystackseries, sgdeaths, mydeaths, myndeaths, phdeaths, thdeaths, vndeaths } from \"./agedeathData\";\r\n\r\n\r\nclass echart extends Component {\r\n\r\n\r\n  plcoptionholder = [];\r\n  country = \"\";\r\n  checkcountry = \"\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n      ctydeathseries: [{\r\n        name: 'Placeholder',\r\n        data: [0, 0, 0, 0, 0]\r\n      }, {\r\n        name: 'Placeholder',\r\n        data: [0, 0, 0, 0, 0]\r\n      }, {\r\n        name: 'Placeholder',\r\n        data: [0, 0, 0, 0, 0]\r\n      }\r\n      ],\r\n\r\n      cty100kseries: [{\r\n        name: 'Placeholder',\r\n        data: [0, 0, 0, 0, 0]\r\n      }, {\r\n        name: 'Placeholder',\r\n        data: [0, 0, 0, 0, 0]\r\n      }, {\r\n        name: 'Placeholder',\r\n        data: [0, 0, 0, 0, 0]\r\n      }\r\n      ],\r\n      consumeseries: [{\r\n        name: 'Placeholder',\r\n        type: 'column',\r\n        data: [0, 0, 0, 0],\r\n\r\n        //color: \"#00BCD4\"\r\n      }, {\r\n        name: 'Placeholder',\r\n        type: 'line',\r\n        data: [0, 0, 0, 0],\r\n        //color: \"#FF7181\"\r\n      }],\r\n\r\n      ctydeathoptions: {\r\n        chart: {\r\n          stacked: true,\r\n          toolbar: {\r\n            show: true,\r\n          }\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          onDatasetHover: {\r\n            highlightDataSeries: true,\r\n          },\r\n          x: {\r\n            show: true,\r\n            format: 'yyyy',\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        grid: {\r\n          row: {\r\n            colors: ['#fff', '#f2f2f2']\r\n          }\r\n        },\r\n        colors: ['#616161', '#FFA000', '#BDBDBD'],\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            legend: {\r\n              position: 'bottom',\r\n              offsetX: -10,\r\n              offsetY: 0\r\n            }\r\n          }\r\n        }],\r\n        plotOptions: {\r\n          bar: {\r\n            endingShape: 'rounded',\r\n            horizontal: false,\r\n          },\r\n        },\r\n        //colors: [\"#00BCD4\", \"#FF7181\"],\r\n        xaxis: {\r\n          type: 'datetime',\r\n          categories: ['01/01/2013', '01/01/2014', '01/01/2015', '01/01/2016', '01/01/2017'],\r\n          //labels: ['2013', '2014', '2015', '2016', '2017']\r\n        },\r\n        legend: {\r\n          position: 'right',\r\n          offsetY: 40\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        }\r\n      },\r\n\r\n      cty100koptions: {\r\n        chart: {\r\n          stacked: true,\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n\r\n          zoom: {\r\n            enabled: true\r\n          }\r\n        },\r\n        colors: ['#616161', '#FFA000', '#BDBDBD'],\r\n        grid: {\r\n          row: {\r\n            colors: ['#fff', '#f2f2f2']\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: true\r\n        },\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            legend: {\r\n              position: 'bottom',\r\n              offsetX: -10,\r\n              offsetY: 0\r\n            }\r\n          }\r\n        }],\r\n        plotOptions: {\r\n          bar: {\r\n            endingShape: 'rounded',\r\n            horizontal: false,\r\n          },\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          onDatasetHover: {\r\n            highlightDataSeries: true,\r\n          },\r\n          x: {\r\n            show: true,\r\n            format: 'yyyy',\r\n          },\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          categories: ['01/01/2013', '01/01/2014', '01/01/2015', '01/01/2016', '01/01/2017']\r\n        },\r\n        legend: {\r\n          position: 'right',\r\n          offsetY: 40\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      consumeoptions: {\r\n        stroke: {\r\n          width: [0, 4],\r\n\r\n        },\r\n        colors: [\"#00BCD4\", \"#FF7181\"],\r\n        grid: {\r\n          row: {\r\n            colors: ['#fff', '#f2f2f2']\r\n          }\r\n        },\r\n\r\n\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\r\n\r\n        },\r\n        yaxis: [{\r\n          title: {\r\n            text: 'Cigarettes Per Smoker Per Day',\r\n\r\n          },\r\n\r\n        }, {\r\n          opposite: true,\r\n          title: {\r\n            text: 'Price of 20-Pack of Cigarettes (US$)',\r\n\r\n          }\r\n        }],\r\n        chart: {\r\n\r\n        },\r\n      },\r\n\r\n      series1: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n      }],\r\n      series2: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      }],\r\n      series3: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      }],\r\n      /*\r\n            newseries1: [{\r\n              data: [19.8, 19.4, 18.9, 18.5, 18.1, 17.8, 17.5, 17.3, 17.0]\r\n            }],\r\n            newseries2: [{\r\n              data: [7.36, 7.73, 8.12, 8.45, 8.84, 9.16, 9.36, 9.87, 10.21],\r\n            }],\r\n            newseries3: [{\r\n              data: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016'],\r\n            }],\r\n      \r\n            */\r\n\r\n      chartOptionsLine1: {\r\n        chart: {\r\n          id: 'tw',\r\n          group: 'social',\r\n        },\r\n        title: {\r\n          text: 'Average Cigarettes Per Smoker Per Day',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n        colors: ['#5C6BC0'],\r\n      },\r\n      chartOptionsLine2: {\r\n        chart: {\r\n          id: 'tw',\r\n          group: 'social',\r\n        },\r\n        title: {\r\n          text: 'Average Price of a 20-Pack of Cigarettes (US$)',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n        colors: ['#00BCD4'],\r\n\r\n      },\r\n      chartOptionsArea: {\r\n        chart: {\r\n          id: 'yt',\r\n          group: 'social',\r\n        },\r\n        title: {\r\n          text: 'Average Amount of Money Spent on Cigarettes Per Year in (US$)',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n\r\n        colors: ['#E53935'],\r\n        //colors: ['#00E396'],\r\n\r\n      },\r\n\r\n      ctystackOptions: {\r\n        chart: {\r\n          stacked: true,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n          },\r\n\r\n        },\r\n        colors: ['#FFA000', '#BDBDBD'],\r\n        stroke: {\r\n          width: 1,\r\n          colors: ['#fff']\r\n        },\r\n\r\n        title: {\r\n          //text: 'Fiction Books Sales'\r\n        },\r\n        xaxis: {\r\n          categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam'],\r\n          //categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\r\n          labels: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: undefined\r\n          },\r\n\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n\r\n        },\r\n\r\n        legend: {\r\n          position: 'top',\r\n          horizontalAlign: 'left',\r\n          offsetX: 40\r\n        }\r\n      },\r\n\r\n\r\n      plcoptions: {\r\n        chart: {\r\n\r\n          stacked: true,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            endingShape: 'rounded',\r\n            horizontal: true,\r\n          },\r\n\r\n        },\r\n        colors: ['#FFA000', '#BDBDBD'],\r\n        stroke: {\r\n          width: 1,\r\n          colors: ['#fff']\r\n        },\r\n\r\n        title: {\r\n          //text: 'Fiction Books Sales'\r\n        },\r\n        xaxis: {\r\n          categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam'],\r\n          //categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\r\n          labels: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: undefined\r\n          },\r\n\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n\r\n        },\r\n\r\n        legend: {\r\n          position: 'top',\r\n          horizontalAlign: 'left',\r\n          offsetX: 40\r\n        }\r\n      },\r\n      plcseries: [{\r\n        name: 'Female',\r\n        data: [0, 0, 0, 0, 0, 0]\r\n      }, {\r\n        name: 'Male',\r\n        data: [0, 0, 0, 0, 0, 0]\r\n      }\r\n      ],\r\n\r\n\r\n      compareOptions1: {\r\n        chart: {\r\n          id: 'tw',\r\n          group: 'compare',\r\n        },\r\n        title: {\r\n          text: 'Deaths Attributed to Smoking in Singapore (%)',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\r\n\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n        //colors: ['#5C6BC0'],\r\n        colors:['#E53935'],\r\n      },\r\n      compareOptions2: {\r\n        chart: {\r\n          id: 'tw',\r\n          group: 'compare',\r\n        },\r\n        title: {\r\n          text: 'Deaths Attributed to Smoking in Malaysia (%)',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\r\n\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n        colors: ['#5C6BC0'],\r\n\r\n      },\r\n      compareOptions3: {\r\n        chart: {\r\n          id: 'yt',\r\n          group: 'compare',\r\n        },\r\n        title: {\r\n          text: 'Deaths Attributed to Smoking in Myanmar (%)',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\r\n\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n\r\n        colors: ['#8BC34A'],\r\n        //colors: ['#00E396'],\r\n\r\n      },\r\n      compareOptions4: {\r\n        chart: {\r\n          id: 'tw',\r\n          group: 'compare',\r\n        },\r\n        title: {\r\n          text: 'Deaths Attributed to Smoking in Philippines (%)',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\r\n\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n        colors: ['#283593'],\r\n      },\r\n      compareOptions5: {\r\n        chart: {\r\n          id: 'tw',\r\n          group: 'compare',\r\n        },\r\n        title: {\r\n          text: 'Deaths Attributed to Smoking in Thailand (%)',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\r\n\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n        colors: ['#FFC107'],\r\n\r\n      },\r\n      compareOptions6: {\r\n        chart: {\r\n          id: 'yt',\r\n          group: 'compare',\r\n        },\r\n        title: {\r\n          text: 'Deaths Attributed to Smoking in Singapore Vietnam (%)',\r\n          align: 'left'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\r\n          \r\n        },\r\n        yaxis: {\r\n          show: false,\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + \"%\"\r\n            }\r\n          }\r\n        },\r\n        markers: {\r\n          size: 6,\r\n          hover: {\r\n            size: 10\r\n          }\r\n        },\r\n\r\n        colors: ['#6A1B9A'],\r\n        //colors: ['#00E396'],\r\n\r\n      },\r\n\r\n      ctyseries1: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\r\n      }],\r\n      ctyseries2: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\r\n      }],\r\n      ctyseries3: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\r\n      }],\r\n      ctyseries4: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\r\n      }],\r\n      ctyseries5: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\r\n      }],\r\n      ctyseries6: [{\r\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\r\n      }],\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  getSunBurstOption = () => {\r\n    //console.log(sunburstData)\r\n\r\n    return {\r\n\r\n\r\n      baseOption: {\r\n        title: {\r\n          //text: 'WORLD COFFEE RESEARCH SENSORY LEXICON',\r\n          //subtext: 'Source: https://worldcoffeeresearch.org/work/sensory-lexicon/',\r\n          textStyle: {\r\n            fontSize: 14,\r\n            align: 'center'\r\n          },\r\n          subtextStyle: {\r\n            align: 'center'\r\n          },\r\n          //sublink: 'https://worldcoffeeresearch.org/work/sensory-lexicon/'\r\n        },\r\n        series: {\r\n          type: 'sunburst',\r\n          highlightPolicy: 'ancestor',\r\n          data: sunburstData,\r\n          radius: [5, '95%'],\r\n          sort: null,\r\n          label: {\r\n            rotate: 'radial'\r\n          },\r\n          itemStyle: {\r\n            borderWidth: 1\r\n          }\r\n\r\n        },\r\n        tooltip: {\r\n          show: true // include tooltip component for the feature\r\n        },\r\n        /* toolbox: {\r\n           show: true,\r\n           showTitle: false, // hide the default text so they don't overlap each other\r\n           feature: {\r\n             saveAsImage: {\r\n               show: true,\r\n               title: 'Save As Image'\r\n             },\r\n             dataView: {\r\n               show: false,\r\n               title: 'Data View'\r\n             },\r\n           },\r\n         },*/\r\n      },\r\n    };\r\n    //console.log(sunburstData)\r\n  };\r\n\r\n  getRCOption = () => {\r\n    let i = 0;\r\n    let j = 0;\r\n    let alldata = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n    let districts = [];\r\n    let years = [];\r\n    Object.entries(deathData).forEach(entry => {\r\n      years = [...years, entry[0]];\r\n      //console.log(entry[1][0]);\r\n\r\n      console.log();\r\n      entry[1].forEach(e => {\r\n        districts = [...new Set([...districts, e.name])];\r\n        alldata[j][i] = e.name;\r\n        i++;\r\n        if (i == 10) {\r\n          i = 0;\r\n        }\r\n\r\n        console.log(deathData.name);\r\n        //console.log([deathData.itemStyle]);\r\n      });\r\n      j++;\r\n    });\r\n\r\n\r\n    let options = years.map(year => {\r\n      let obj = {};\r\n      obj.title = {\r\n        text: `Number of Deaths By Risk Factor in the World, ${year}`\r\n      };\r\n      obj.series = [\r\n        {\r\n          data: deathData[year]\r\n        }\r\n      ];\r\n      return obj;\r\n    });\r\n\r\n\r\n    return {\r\n      baseOption: {\r\n        timeline: {\r\n          autoPlay: true,\r\n          axisType: \"category\",\r\n          bottom: 20,\r\n          data: years,\r\n          height: null,\r\n          inverse: true,\r\n          left: null,\r\n          orient: \"vertical\",\r\n          playInterval: 1000,\r\n          right: 0,\r\n          top: 20,\r\n          width: 55,\r\n          grid: {\r\n            containLabel: true\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n              textStyle: {\r\n                color: \"#aaa\"\r\n              }\r\n            },\r\n            emphasis: {\r\n              textStyle: {\r\n                color: \"#333\"\r\n              }\r\n            }\r\n          },\r\n          symbol: \"none\",\r\n          lineStyle: {\r\n            color: \"#aaa\"\r\n          },\r\n          checkpointStyle: {\r\n            color: \"#354EF6\",\r\n            borderColor: \"transparent\",\r\n            borderWidth: 2\r\n          },\r\n          controlStyle: {\r\n            showNextBtn: false,\r\n            showPrevBtn: false,\r\n            normal: {\r\n              color: \"#354EF6\",\r\n              borderColor: \"#354EF6\"\r\n            },\r\n            emphasis: {\r\n              color: \"#5d71f7\",\r\n              borderColor: \"#5d71f7\"\r\n            }\r\n          }\r\n        },\r\n        color: [deathData.itemStyle],\r\n        //color: [\"#e91e63 \", \"#354EF6\"],\r\n        title: {\r\n          subtext: \"Data from ourworldindata.org\",\r\n          textAlign: \"left\",\r\n          left: \"5%\"\r\n        },\r\n        tooltip: { backgroundColor: \"#555\", borderWidth: 0, padding: 10 },\r\n        legend: {\r\n          data: [\"Deaths\", \"Male\"],\r\n          itemGap: 35,\r\n          itemHeight: 18,\r\n          right: \"11%\",\r\n          top: 20\r\n        },\r\n        calculable: true,\r\n        grid: {\r\n          containLabel: true,\r\n          //top: 100,\r\n          //bottom: 150,\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n              type: \"shadow\",\r\n              label: {\r\n                show: true,\r\n                position: 'insideRight',\r\n                formatter: function (params) {\r\n                  return params.value.replace(\"\\n\", \"\");\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        xAxis: [\r\n          {\r\n            axisLabel: {\r\n              interval: 0,\r\n              rotate: 55,\r\n              textStyle: {\r\n                baseline: \"top\",\r\n                color: \"#333\",\r\n                fontSize: 10,\r\n                fontWeight: \"bold\"\r\n              }\r\n            },\r\n            axisLine: { lineStyle: { color: \"#aaa\" }, show: true },\r\n            axisTick: { show: false },\r\n            roundCap: true,\r\n            //data: alldata[0],\r\n            splitLine: { show: false },\r\n            type: \"value\"\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            axisLabel: {\r\n              show: false,\r\n              //textStyle: { fontSize: 10 }\r\n            },\r\n            axisLine: { show: false },\r\n            axisTick: { show: false },\r\n            //data: names,\r\n            data: alldata[0],\r\n            //name: \"Factors of Death\",\r\n            splitLine: {\r\n              lineStyle: {\r\n                type: \"dotted\"\r\n              }\r\n            },\r\n            type: \"category\"\r\n          }\r\n        ],\r\n        series: [{\r\n          //name: \"Deaths\", \r\n          type: \"bar\",\r\n          roundCap: true,\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              formatter: '{b}',\r\n              position: 'insideRight'\r\n            }\r\n          }\r\n        }]\r\n      },\r\n      options: options\r\n    };\r\n  };\r\n\r\n  onSunBurstChartClick = (params) => {\r\n    //console.log name of segment selected\r\n    //console.log(params.data.name)\r\n    this.checkcountry = params.data.name\r\n    if (this.checkcountry != \"\" && this.checkcountry != undefined && this.checkcountry != \"Asia\" && this.checkcountry != \"East Asia\" && this.checkcountry != \"South-East Asia\" && this.checkcountry != \"West Asia\" && this.checkcountry != \"Europe\" && this.checkcountry != \"West Europe\" && this.checkcountry != \"North Europe\" && this.checkcountry != \"East Europe\" && this.checkcountry != \"America\" && this.checkcountry != \"North America\" && this.checkcountry != \"South America\" && this.checkcountry != \"Africa\" && this.checkcountry != \"North Africa\" && this.checkcountry != \"Central Africa\") {\r\n      this.country = params.data.name\r\n    }\r\n\r\n    if (this.country == \"Singapore\") {\r\n      this.setState({\r\n        ctydeathseries: sgdeathseries,\r\n        cty100kseries: sg100kseries,\r\n        series1: sgconsumerseries,\r\n        series2: sgconsumerpriceseries,\r\n        series3: sgyearprice,\r\n        plcseries: sgctystackseries,\r\n        //plcoptionholder: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\r\n        ctyseries1: sgdeaths,\r\n        ctyseries2: mydeaths,\r\n        ctyseries3: myndeaths,\r\n        ctyseries4: phdeaths,\r\n        ctyseries5: thdeaths,\r\n        ctyseries6: vndeaths,\r\n\r\n        //updateSeries()\r\n      })\r\n      //chart.updateSeries()\r\n    }\r\n    if (this.country == \"United Kingdom\") {\r\n      this.setState({\r\n        ctydeathseries: ukdeathseries,\r\n        cty100kseries: uk100kseries,\r\n        series1: ukconsumerseries,\r\n        series2: ukconsumerpriceseries,\r\n        series3: ukyearprice,\r\n        plcseries: ukctystackseries,\r\n        //updateSeries()\r\n\r\n\r\n      })\r\n      //chart.updateSeries()\r\n    }\r\n\r\n    //ApexChart.exec(document.querySelector(\"#chart\"), 'updateSeries', this.state.genseries,true)\r\n  };\r\n\r\n  _onEvents = {\r\n    'click': this.onSunBurstChartClick,\r\n    'dataZoom': this.onDataZoom,\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <ReactEcharts\r\n                option={this.getRCOption()}\r\n                style={{ height: \"80vh\" }}\r\n                opts={{ renderer: \"svg\" }}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Row className=\"row-eq-height\">\r\n          <Col sm=\"5\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Country Selector</CardTitle>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ReactEcharts\r\n                  id=\"sunburst\"\r\n                  option={this.getSunBurstOption()}\r\n                  style={{ height: \"70vh\" }}\r\n                  opts={{ renderer: \"svg\" }}\r\n                  ref={(e) => { this.echarts_react = e; }}\r\n                  onEvents={this._onEvents}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col sm=\"12\" lg=\"6\" xl=\"7\">\r\n            <Card>\r\n\r\n              <CardBody>\r\n                <div id=\"wrapper\">\r\n                  <div id=\"chart-line\">\r\n                    <Apexchart type=\"area\" height=\"200\" options={this.state.chartOptionsLine1} series={this.state.series1} />\r\n                  </div>\r\n\r\n                  <div id=\"chart-line2\">\r\n                    <Apexchart type=\"area\" height=\"200\" options={this.state.chartOptionsLine2} series={this.state.series2} />\r\n                  </div>\r\n\r\n                  <div id=\"chart-area\">\r\n                    <Apexchart type=\"area\" height=\"200\" options={this.state.chartOptionsArea} series={this.state.series3} />\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"row-eq-height\">\r\n          <Col sm=\"12\" lg=\"6\" xl=\"6\">\r\n            <Card>\r\n              <CardHeader><CardTitle>Number of Deaths Per 100k Capita from Smoking in {this.country}</CardTitle></CardHeader>\r\n              <CardBody>\r\n                <div id=\"chart\">\r\n                  <Apexchart options={this.state.cty100koptions} series={this.state.cty100kseries} type=\"bar\" width=\"650\" />\r\n                </div>\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col sm=\"12\" lg=\"6\" xl=\"6\">\r\n            <Card>\r\n              <CardHeader><CardTitle>Smoking Prevalance of Neighbouring Countries</CardTitle></CardHeader>\r\n              <CardBody>\r\n\r\n                <div id=\"chart\">\r\n                  <Apexchart options={this.state.plcoptions} series={this.state.plcseries} type=\"bar\" height=\"400\" />\r\n                </div>\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"row-eq-height\">\r\n          <Col sm=\"12\" lg=\"6\" xl=\"6\">\r\n            <Card>\r\n\r\n              <CardBody>\r\n                <div id=\"wrapper\">\r\n                  <div id=\"chart-line1\">\r\n                    <Apexchart type=\"area\" height=\"200\" options={this.state.compareOptions1} series={this.state.ctyseries1} />\r\n                  </div>\r\n\r\n                  <div id=\"chart-line2\">\r\n                    <Apexchart type=\"area\" height=\"200\" options={this.state.compareOptions2} series={this.state.ctyseries2} />\r\n                  </div>\r\n\r\n                  <div id=\"chart-area3\">\r\n                    <Apexchart type=\"area\" height=\"200\" options={this.state.compareOptions3} series={this.state.ctyseries3} />\r\n                  </div>\r\n                </div>\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col sm=\"12\" lg=\"6\" xl=\"6\">\r\n            <Card>\r\n\r\n              <CardBody>\r\n\r\n                <div id=\"chart-line4\">\r\n                  <Apexchart type=\"area\" height=\"200\" options={this.state.compareOptions4} series={this.state.ctyseries4} />\r\n                </div>\r\n\r\n                <div id=\"chart-line5\">\r\n                  <Apexchart type=\"area\" height=\"200\" options={this.state.compareOptions5} series={this.state.ctyseries5} />\r\n                </div>\r\n\r\n                <div id=\"chart-area\">\r\n                  <Apexchart type=\"area\" height=\"200\" options={this.state.compareOptions6} series={this.state.ctyseries6} />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n\r\n          </Col>\r\n        </Row>\r\n      </Fragment>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default echart;"]},"metadata":{},"sourceType":"module"}