{"ast":null,"code":"import _classCallCheck from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\REACT APEX\\\\src\\\\views\\\\dashboard\\\\analyticsDashboard.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport * as Icon from \"react-feather\";\nimport { StaticCardData } from \"../cards/staticCardData\";\nimport { AdvancedCardData } from \"../cards/advancedCardData\";\nimport MinimalStatisticsChart2 from \"../../components/cards/minimalStatisticsWithChart2Card\";\nimport DiscoverPeopleListCard from \"../../components/cards/discoverPeopleListCard\";\nimport SalesAnalysisChartCarda from \"../../components/cards/salesAnalysisChartCard\";\nimport FitnessStatisticsChart from \"../../components/cards/fitnessStatisticsWithChartCard\";\nimport SalesPerVisitChartCard from \"../../components/cards/salesPerVisitChartCard\";\nimport DailyDietListCard from \"../../components/cards/dailyDietListCard\";\nimport UserStatisticsChartCard from \"../../components/cards/userStatisticsChartCard\";\nimport CarouselSliderCard from \"../../components/cards/carouselSliderCard\";\nimport EarningStatisticsChartCard from \"../../components/cards/earningStatisticsChartCard\";\nimport Apexchart from \"react-apexcharts\";\nimport { sgdeathseries, sg100kseries, ukdeathseries, uk100kseries, sgconsumerseries, ukconsumerseries, sgconsumerpriceseries, ukconsumerpriceseries, sgyearprice, ukyearprice, sgctystackseries, ukctystackseries, sgdeaths, mydeaths, myndeaths, phdeaths, thdeaths, vndeaths } from \"./agedeathData\";\n\nvar AnalyticsDashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnalyticsDashboard, _Component);\n\n  _createClass(AnalyticsDashboard, [{\n    key: \"cardClicked\",\n    value: function cardClicked(val) {\n      switch (val) {\n        case 1:\n          this.setState({\n            series1: sgconsumerseries,\n            series2: sgconsumerpriceseries,\n            series3: sgyearprice\n          });\n          break;\n\n        case 2:\n          alert(\"2\");\n          break;\n\n        case 3:\n          alert(\"3\");\n          break;\n\n        case 4:\n          alert(\"4\");\n          break;\n      }\n    }\n  }]);\n\n  function AnalyticsDashboard(props) {\n    var _this;\n\n    _classCallCheck(this, AnalyticsDashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnalyticsDashboard).call(this, props));\n    _this.state = {\n      ctydeathseries: [{\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }, {\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }, {\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }],\n      cty100kseries: [{\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }, {\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }, {\n        name: 'Placeholder',\n        data: [0, 0, 0, 0, 0]\n      }],\n      consumeseries: [{\n        name: 'Placeholder',\n        type: 'column',\n        data: [0, 0, 0, 0] //color: \"#00BCD4\"\n\n      }, {\n        name: 'Placeholder',\n        type: 'line',\n        data: [0, 0, 0, 0] //color: \"#FF7181\"\n\n      }],\n      ctydeathoptions: {\n        chart: {\n          stacked: true,\n          toolbar: {\n            show: true\n          }\n        },\n        tooltip: {\n          enabled: true,\n          onDatasetHover: {\n            highlightDataSeries: true\n          },\n          x: {\n            show: true,\n            format: 'yyyy'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        grid: {\n          row: {\n            colors: ['#fff', '#f2f2f2']\n          }\n        },\n        colors: ['#616161', '#FFA000', '#BDBDBD'],\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: 'bottom',\n              offsetX: -10,\n              offsetY: 0\n            }\n          }\n        }],\n        plotOptions: {\n          bar: {\n            endingShape: 'rounded',\n            horizontal: false\n          }\n        },\n        //colors: [\"#00BCD4\", \"#FF7181\"],\n        xaxis: {\n          type: 'datetime',\n          categories: ['01/01/2013', '01/01/2014', '01/01/2015', '01/01/2016', '01/01/2017'] //labels: ['2013', '2014', '2015', '2016', '2017']\n\n        },\n        legend: {\n          position: 'right',\n          offsetY: 40\n        },\n        fill: {\n          opacity: 1\n        }\n      },\n      cty100koptions: {\n        chart: {\n          stacked: true,\n          toolbar: {\n            show: true\n          },\n          zoom: {\n            enabled: true\n          }\n        },\n        colors: ['#616161', '#FFA000', '#BDBDBD'],\n        grid: {\n          row: {\n            colors: ['#fff', '#f2f2f2']\n          }\n        },\n        dataLabels: {\n          enabled: true\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: 'bottom',\n              offsetX: -10,\n              offsetY: 0\n            }\n          }\n        }],\n        plotOptions: {\n          bar: {\n            endingShape: 'rounded',\n            horizontal: false\n          }\n        },\n        tooltip: {\n          enabled: true,\n          onDatasetHover: {\n            highlightDataSeries: true\n          },\n          x: {\n            show: true,\n            format: 'yyyy'\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          categories: ['01/01/2013', '01/01/2014', '01/01/2015', '01/01/2016', '01/01/2017']\n        },\n        legend: {\n          position: 'right',\n          offsetY: 40\n        },\n        fill: {\n          opacity: 1\n        }\n      },\n      consumeoptions: {\n        stroke: {\n          width: [0, 4]\n        },\n        colors: [\"#00BCD4\", \"#FF7181\"],\n        grid: {\n          row: {\n            colors: ['#fff', '#f2f2f2']\n          }\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: [{\n          title: {\n            text: 'Cigarettes Per Smoker Per Day'\n          }\n        }, {\n          opposite: true,\n          title: {\n            text: 'Price of 20-Pack of Cigarettes (US$)'\n          }\n        }],\n        chart: {}\n      },\n      series1: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      series2: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      series3: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n\n      /*\n            newseries1: [{\n              data: [19.8, 19.4, 18.9, 18.5, 18.1, 17.8, 17.5, 17.3, 17.0]\n            }],\n            newseries2: [{\n              data: [7.36, 7.73, 8.12, 8.45, 8.84, 9.16, 9.36, 9.87, 10.21],\n            }],\n            newseries3: [{\n              data: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016'],\n            }],\n      \n            */\n      chartOptionsLine1: {\n        chart: {\n          id: 'tw',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Cigarettes Per Smoker Per Day',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#5C6BC0']\n      },\n      chartOptionsLine2: {\n        chart: {\n          id: 'tw',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Price of a 20-Pack of Cigarettes (US$)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#00BCD4']\n      },\n      chartOptionsArea: {\n        chart: {\n          id: 'yt',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Amount of Money Spent on Cigarettes Per Year in (US$)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#E53935'] //colors: ['#00E396'],\n\n      },\n      ctystackOptions: {\n        chart: {\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        colors: ['#FFA000', '#BDBDBD'],\n        stroke: {\n          width: 1,\n          colors: ['#fff']\n        },\n        title: {//text: 'Fiction Books Sales'\n        },\n        xaxis: {\n          categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam'],\n          //categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\n          labels: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: undefined\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      plcoptions: {\n        chart: {\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            endingShape: 'rounded',\n            horizontal: true\n          }\n        },\n        colors: ['#FFA000', '#BDBDBD'],\n        stroke: {\n          width: 1,\n          colors: ['#fff']\n        },\n        title: {//text: 'Fiction Books Sales'\n        },\n        xaxis: {\n          categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam'],\n          //categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\n          labels: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: undefined\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      plcseries: [{\n        name: 'Female',\n        data: [0, 0, 0, 0, 0, 0]\n      }, {\n        name: 'Male',\n        data: [0, 0, 0, 0, 0, 0]\n      }],\n      compareOptions1: {\n        chart: {\n          id: 'tw',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Singapore (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        //colors: ['#5C6BC0'],\n        colors: ['#E53935']\n      },\n      compareOptions2: {\n        chart: {\n          id: 'tw',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Malaysia (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#5C6BC0']\n      },\n      compareOptions3: {\n        chart: {\n          id: 'yt',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Myanmar (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#8BC34A'] //colors: ['#00E396'],\n\n      },\n      compareOptions4: {\n        chart: {\n          id: 'tw',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Philippines (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#283593']\n      },\n      compareOptions5: {\n        chart: {\n          id: 'tw',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Thailand (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#FFC107']\n      },\n      compareOptions6: {\n        chart: {\n          id: 'yt',\n          group: 'compare'\n        },\n        title: {\n          text: 'Deaths Attributed to Smoking in Singapore Vietnam (%)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return val + \"%\";\n            }\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#6A1B9A'] //colors: ['#00E396'],\n\n      },\n      ctyseries1: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries2: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries3: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries4: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries5: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      ctyseries6: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0]\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(AnalyticsDashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        xl: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.cardClicked(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(MinimalStatisticsChart2, {\n        chartData: StaticCardData.ChartistData2,\n        cardBgColor: \"bg-danger\",\n        statistics: \"$2156\",\n        text: \"Total Tax\",\n        iconSide: \"right\",\n        onClick: this.cardClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }, React.createElement(Icon.PieChart, {\n        size: 36,\n        strokeWidth: \"1.3\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        xl: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.cardClicked(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, React.createElement(MinimalStatisticsChart2, {\n        chartData: StaticCardData.ChartistData2,\n        cardBgColor: \"bg-success\",\n        statistics: \"$1567\",\n        text: \"Total Earning\",\n        iconSide: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, React.createElement(Icon.Box, {\n        size: 36,\n        strokeWidth: \"1.3\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        xl: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.cardClicked(3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }, React.createElement(MinimalStatisticsChart2, {\n        chartData: StaticCardData.ChartistData2,\n        cardBgColor: \"bg-warning\",\n        statistics: \"$4566\",\n        text: \"Total Sales\",\n        iconSide: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }, React.createElement(Icon.Filter, {\n        size: 36,\n        strokeWidth: \"1.3\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        xl: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.cardClicked(4);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }, React.createElement(MinimalStatisticsChart2, {\n        chartData: StaticCardData.ChartistData2,\n        cardBgColor: \"bg-info\",\n        statistics: \"$4566\",\n        text: \"Total Sales\",\n        iconSide: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, React.createElement(Icon.DollarSign, {\n        size: 36,\n        strokeWidth: \"1.3\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      }))))), React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        lg: \"6\",\n        xl: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsLine1,\n        series: this.state.series1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-line2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsLine2,\n        series: this.state.series2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsArea,\n        series: this.state.series3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        sm: \"12\",\n        lg: \"6\",\n        xl: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820\n        },\n        __self: this\n      }, React.createElement(DiscoverPeopleListCard, {\n        discoverPeopleList: AdvancedCardData.DiscoverPeopleList,\n        cardTitle: \"Peoples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }, React.createElement(FitnessStatisticsChart, {\n        donutChartData: StaticCardData.DonutChartData1,\n        dountChartClass: \"donut1\",\n        textTop: \"Steps\",\n        statisticsTop: \"3261\",\n        textBottom: \"Steps Today's Target\",\n        statisticsBottom: \"5000\",\n        textColor: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        },\n        __self: this\n      }), React.createElement(Icon.TrendingUp, {\n        size: 60,\n        strokeWidth: \"1\",\n        className: \"primary icon-dount-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, React.createElement(FitnessStatisticsChart, {\n        donutChartData: StaticCardData.DonutChartData2,\n        dountChartClass: \"donut2\",\n        textTop: \"Distance\",\n        statisticsTop: \"7.6\",\n        statisticsTopUnit: \"miles\",\n        textBottom: \"Miles Today's Target\",\n        statisticsBottom: \"10\",\n        textColor: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }), React.createElement(Icon.Zap, {\n        size: 60,\n        strokeWidth: \"1\",\n        className: \"warning icon-dount-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }, React.createElement(FitnessStatisticsChart, {\n        donutChartData: StaticCardData.DonutChartData3,\n        dountChartClass: \"donut3\",\n        textTop: \"Calories\",\n        statisticsTop: \"4,025\",\n        statisticsTopUnit: \"kcal\",\n        textBottom: \"kcla Today's Target\",\n        statisticsBottom: \"5000\",\n        textColor: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }), React.createElement(Icon.Heart, {\n        size: 60,\n        strokeWidth: \"1\",\n        className: \"danger icon-dount-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883\n        },\n        __self: this\n      }, React.createElement(SalesPerVisitChartCard, {\n        salesPerVisitData: AdvancedCardData.SalesPerVisitData,\n        cardTitle: \"Sales Per Visit\",\n        salesText: \"Sales\",\n        visitText: \"Visits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891\n        },\n        __self: this\n      }, React.createElement(DailyDietListCard, {\n        dailyDietList: AdvancedCardData.DailyDietList,\n        cardTitle: \"Daily Diet\",\n        cardSubTitle: \"Some quick example text to build on the card.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901\n        },\n        __self: this\n      }, React.createElement(UserStatisticsChartCard, {\n        userStatisticData: AdvancedCardData.UserStatisticData,\n        fullName: \"Kevin Sullivan\",\n        designation: \"UX Designer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }, React.createElement(CarouselSliderCard, {\n        cardTitle: \"Card Titile\",\n        description: \"Sweet halvah drag\\xE9e jelly-o halvah carrot cake oat cake. Donut jujubes jelly chocolate cake.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, React.createElement(EarningStatisticsChartCard, {\n        earningStatisticData: AdvancedCardData.EarningStatisticData,\n        cardTitle: \"Earning\",\n        cardSubTitle: \"Mon 18 - Sun 21\",\n        earningAmount: \"$4295.36\",\n        earningText: \"Total Earnings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AnalyticsDashboard;\n}(Component);\n\nexport default AnalyticsDashboard;","map":{"version":3,"sources":["D:/REACT APEX/src/views/dashboard/analyticsDashboard.js"],"names":["React","Component","Fragment","Row","Col","Card","CardTitle","CardHeader","CardBody","Icon","StaticCardData","AdvancedCardData","MinimalStatisticsChart2","DiscoverPeopleListCard","SalesAnalysisChartCarda","FitnessStatisticsChart","SalesPerVisitChartCard","DailyDietListCard","UserStatisticsChartCard","CarouselSliderCard","EarningStatisticsChartCard","Apexchart","sgdeathseries","sg100kseries","ukdeathseries","uk100kseries","sgconsumerseries","ukconsumerseries","sgconsumerpriceseries","ukconsumerpriceseries","sgyearprice","ukyearprice","sgctystackseries","ukctystackseries","sgdeaths","mydeaths","myndeaths","phdeaths","thdeaths","vndeaths","AnalyticsDashboard","val","setState","series1","series2","series3","alert","props","state","ctydeathseries","name","data","cty100kseries","consumeseries","type","ctydeathoptions","chart","stacked","toolbar","show","tooltip","enabled","onDatasetHover","highlightDataSeries","x","format","dataLabels","grid","row","colors","responsive","breakpoint","options","legend","position","offsetX","offsetY","plotOptions","bar","endingShape","horizontal","xaxis","categories","fill","opacity","cty100koptions","zoom","consumeoptions","stroke","width","yaxis","title","text","opposite","chartOptionsLine1","id","group","align","axisTicks","markers","size","hover","chartOptionsLine2","chartOptionsArea","ctystackOptions","labels","formatter","undefined","y","horizontalAlign","plcoptions","plcseries","compareOptions1","compareOptions2","compareOptions3","compareOptions4","compareOptions5","compareOptions6","ctyseries1","ctyseries2","ctyseries3","ctyseries4","ctyseries5","ctyseries6","cardClicked","ChartistData2","DiscoverPeopleList","DonutChartData1","DonutChartData2","DonutChartData3","SalesPerVisitData","DailyDietList","UserStatisticData","EarningStatisticData"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\n\nimport * as Icon from \"react-feather\";\n\nimport { StaticCardData } from \"../cards/staticCardData\";\nimport { AdvancedCardData } from \"../cards/advancedCardData\";\n\nimport MinimalStatisticsChart2 from \"../../components/cards/minimalStatisticsWithChart2Card\";\n\nimport DiscoverPeopleListCard from \"../../components/cards/discoverPeopleListCard\";\nimport SalesAnalysisChartCarda from \"../../components/cards/salesAnalysisChartCard\";\n\nimport FitnessStatisticsChart from \"../../components/cards/fitnessStatisticsWithChartCard\";\n\nimport SalesPerVisitChartCard from \"../../components/cards/salesPerVisitChartCard\";\nimport DailyDietListCard from \"../../components/cards/dailyDietListCard\";\n\nimport UserStatisticsChartCard from \"../../components/cards/userStatisticsChartCard\";\nimport CarouselSliderCard from \"../../components/cards/carouselSliderCard\";\nimport EarningStatisticsChartCard from \"../../components/cards/earningStatisticsChartCard\";\n\nimport Apexchart from \"react-apexcharts\";\nimport { sgdeathseries, sg100kseries, ukdeathseries, uk100kseries, sgconsumerseries, ukconsumerseries, sgconsumerpriceseries, ukconsumerpriceseries, sgyearprice, ukyearprice, sgctystackseries, ukctystackseries, sgdeaths, mydeaths, myndeaths, phdeaths, thdeaths, vndeaths } from \"./agedeathData\";\n\nclass AnalyticsDashboard extends Component {\n  cardClicked(val) {\n    switch (val) {\n      case 1:\n            this.setState({\n               series1: sgconsumerseries,\n               series2: sgconsumerpriceseries,\n               series3: sgyearprice,               \n             })\n        break;\n      case 2:\n        alert(\"2\");\n        break;\n      case 3:\n        alert(\"3\");\n        break;\n      case 4:\n        alert(\"4\");\n        break;\n    }\n  }\n\n  constructor(props) {\n   super(props);\n   this.state = {\n\n     ctydeathseries: [{\n       name: 'Placeholder',\n       data: [0, 0, 0, 0, 0]\n     }, {\n       name: 'Placeholder',\n       data: [0, 0, 0, 0, 0]\n     }, {\n       name: 'Placeholder',\n       data: [0, 0, 0, 0, 0]\n     }\n     ],\n\n     cty100kseries: [{\n       name: 'Placeholder',\n       data: [0, 0, 0, 0, 0]\n     }, {\n       name: 'Placeholder',\n       data: [0, 0, 0, 0, 0]\n     }, {\n       name: 'Placeholder',\n       data: [0, 0, 0, 0, 0]\n     }\n     ],\n     consumeseries: [{\n       name: 'Placeholder',\n       type: 'column',\n       data: [0, 0, 0, 0],\n\n       //color: \"#00BCD4\"\n     }, {\n       name: 'Placeholder',\n       type: 'line',\n       data: [0, 0, 0, 0],\n       //color: \"#FF7181\"\n     }],\n\n     ctydeathoptions: {\n       chart: {\n         stacked: true,\n         toolbar: {\n           show: true,\n         }\n       },\n       tooltip: {\n         enabled: true,\n         onDatasetHover: {\n           highlightDataSeries: true,\n         },\n         x: {\n           show: true,\n           format: 'yyyy',\n         },\n       },\n       dataLabels: {\n         enabled: false\n       },\n       grid: {\n         row: {\n           colors: ['#fff', '#f2f2f2']\n         }\n       },\n       colors: ['#616161', '#FFA000', '#BDBDBD'],\n       responsive: [{\n         breakpoint: 480,\n         options: {\n           legend: {\n             position: 'bottom',\n             offsetX: -10,\n             offsetY: 0\n           }\n         }\n       }],\n       plotOptions: {\n         bar: {\n           endingShape: 'rounded',\n           horizontal: false,\n         },\n       },\n       //colors: [\"#00BCD4\", \"#FF7181\"],\n       xaxis: {\n         type: 'datetime',\n         categories: ['01/01/2013', '01/01/2014', '01/01/2015', '01/01/2016', '01/01/2017'],\n         //labels: ['2013', '2014', '2015', '2016', '2017']\n       },\n       legend: {\n         position: 'right',\n         offsetY: 40\n       },\n       fill: {\n         opacity: 1\n       }\n     },\n\n     cty100koptions: {\n       chart: {\n         stacked: true,\n         toolbar: {\n           show: true,\n         },\n\n         zoom: {\n           enabled: true\n         }\n       },\n       colors: ['#616161', '#FFA000', '#BDBDBD'],\n       grid: {\n         row: {\n           colors: ['#fff', '#f2f2f2']\n         }\n       },\n       dataLabels: {\n         enabled: true\n       },\n       responsive: [{\n         breakpoint: 480,\n         options: {\n           legend: {\n             position: 'bottom',\n             offsetX: -10,\n             offsetY: 0\n           }\n         }\n       }],\n       plotOptions: {\n         bar: {\n           endingShape: 'rounded',\n           horizontal: false,\n         },\n       },\n       tooltip: {\n         enabled: true,\n         onDatasetHover: {\n           highlightDataSeries: true,\n         },\n         x: {\n           show: true,\n           format: 'yyyy',\n         },\n       },\n       xaxis: {\n         type: 'datetime',\n         categories: ['01/01/2013', '01/01/2014', '01/01/2015', '01/01/2016', '01/01/2017']\n       },\n       legend: {\n         position: 'right',\n         offsetY: 40\n       },\n       fill: {\n         opacity: 1\n       }\n     },\n     consumeoptions: {\n       stroke: {\n         width: [0, 4],\n\n       },\n       colors: [\"#00BCD4\", \"#FF7181\"],\n       grid: {\n         row: {\n           colors: ['#fff', '#f2f2f2']\n         }\n       },\n\n\n       xaxis: {\n         type: 'category',\n         categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n\n       },\n       yaxis: [{\n         title: {\n           text: 'Cigarettes Per Smoker Per Day',\n\n         },\n\n       }, {\n         opposite: true,\n         title: {\n           text: 'Price of 20-Pack of Cigarettes (US$)',\n\n         }\n       }],\n       chart: {\n\n       },\n     },\n\n     series1: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n     }],\n     series2: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n     }],\n     series3: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n     }],\n     /*\n           newseries1: [{\n             data: [19.8, 19.4, 18.9, 18.5, 18.1, 17.8, 17.5, 17.3, 17.0]\n           }],\n           newseries2: [{\n             data: [7.36, 7.73, 8.12, 8.45, 8.84, 9.16, 9.36, 9.87, 10.21],\n           }],\n           newseries3: [{\n             data: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016'],\n           }],\n     \n           */\n\n     chartOptionsLine1: {\n       chart: {\n         id: 'tw',\n         group: 'social',\n       },\n       title: {\n         text: 'Average Cigarettes Per Smoker Per Day',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n       colors: ['#5C6BC0'],\n     },\n     chartOptionsLine2: {\n       chart: {\n         id: 'tw',\n         group: 'social',\n       },\n       title: {\n         text: 'Average Price of a 20-Pack of Cigarettes (US$)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n       colors: ['#00BCD4'],\n\n     },\n     chartOptionsArea: {\n       chart: {\n         id: 'yt',\n         group: 'social',\n       },\n       title: {\n         text: 'Average Amount of Money Spent on Cigarettes Per Year in (US$)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n\n       colors: ['#E53935'],\n       //colors: ['#00E396'],\n\n     },\n\n     ctystackOptions: {\n       chart: {\n         stacked: true,\n       },\n       plotOptions: {\n         bar: {\n           horizontal: true,\n         },\n\n       },\n       colors: ['#FFA000', '#BDBDBD'],\n       stroke: {\n         width: 1,\n         colors: ['#fff']\n       },\n\n       title: {\n         //text: 'Fiction Books Sales'\n       },\n       xaxis: {\n         categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam'],\n         //categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\n         labels: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n       yaxis: {\n         title: {\n           text: undefined\n         },\n\n       },\n       tooltip: {\n         y: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n       fill: {\n         opacity: 1\n\n       },\n\n       legend: {\n         position: 'top',\n         horizontalAlign: 'left',\n         offsetX: 40\n       }\n     },\n\n\n     plcoptions: {\n       chart: {\n\n         stacked: true,\n       },\n       plotOptions: {\n         bar: {\n           endingShape: 'rounded',\n           horizontal: true,\n         },\n\n       },\n       colors: ['#FFA000', '#BDBDBD'],\n       stroke: {\n         width: 1,\n         colors: ['#fff']\n       },\n\n       title: {\n         //text: 'Fiction Books Sales'\n       },\n       xaxis: {\n         categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam'],\n         //categories: ['Singapore', 'Malaysia', 'Myanmar', 'Philippines', 'Thailand', 'Vietnam']\n         labels: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n       yaxis: {\n         title: {\n           text: undefined\n         },\n\n       },\n       tooltip: {\n         y: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n       fill: {\n         opacity: 1\n\n       },\n\n       legend: {\n         position: 'top',\n         horizontalAlign: 'left',\n         offsetX: 40\n       }\n     },\n     plcseries: [{\n       name: 'Female',\n       data: [0, 0, 0, 0, 0, 0]\n     }, {\n       name: 'Male',\n       data: [0, 0, 0, 0, 0, 0]\n     }\n     ],\n\n\n     compareOptions1: {\n       chart: {\n         id: 'tw',\n         group: 'compare',\n       },\n       title: {\n         text: 'Deaths Attributed to Smoking in Singapore (%)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\n\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n       tooltip: {\n         y: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n       //colors: ['#5C6BC0'],\n       colors:['#E53935'],\n     },\n     compareOptions2: {\n       chart: {\n         id: 'tw',\n         group: 'compare',\n       },\n       title: {\n         text: 'Deaths Attributed to Smoking in Malaysia (%)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\n\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n       tooltip: {\n         y: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n       colors: ['#5C6BC0'],\n\n     },\n     compareOptions3: {\n       chart: {\n         id: 'yt',\n         group: 'compare',\n       },\n       title: {\n         text: 'Deaths Attributed to Smoking in Myanmar (%)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\n\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n       tooltip: {\n         y: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n\n       colors: ['#8BC34A'],\n       //colors: ['#00E396'],\n\n     },\n     compareOptions4: {\n       chart: {\n         id: 'tw',\n         group: 'compare',\n       },\n       title: {\n         text: 'Deaths Attributed to Smoking in Philippines (%)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\n\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n       tooltip: {\n         y: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n       colors: ['#283593'],\n     },\n     compareOptions5: {\n       chart: {\n         id: 'tw',\n         group: 'compare',\n       },\n       title: {\n         text: 'Deaths Attributed to Smoking in Thailand (%)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\n\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n       tooltip: {\n         y: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n       colors: ['#FFC107'],\n\n     },\n     compareOptions6: {\n       chart: {\n         id: 'yt',\n         group: 'compare',\n       },\n       title: {\n         text: 'Deaths Attributed to Smoking in Singapore Vietnam (%)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\n         \n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n       tooltip: {\n         y: {\n           formatter: function (val) {\n             return val + \"%\"\n           }\n         }\n       },\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n\n       colors: ['#6A1B9A'],\n       //colors: ['#00E396'],\n\n     },\n\n     ctyseries1: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0]\n     }],\n     ctyseries2: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0]\n     }],\n     ctyseries3: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0]\n     }],\n     ctyseries4: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0]\n     }],\n     ctyseries5: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0]\n     }],\n     ctyseries6: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0]\n     }],\n\n\n\n\n   }\n\n }\n\n  render() {\n    return (\n      <Fragment>\n        {/* Statistics */}\n\n        <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <a onClick={() => this.cardClicked(1)}>\n              <MinimalStatisticsChart2\n                chartData={StaticCardData.ChartistData2}\n                cardBgColor=\"bg-danger\"\n                statistics=\"$2156\"\n                text=\"Total Tax\"\n                iconSide=\"right\"\n                onClick={this.cardClicked}\n              >\n                <Icon.PieChart size={36} strokeWidth=\"1.3\" color=\"#fff\" />\n              </MinimalStatisticsChart2>\n            </a>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <a onClick={() => this.cardClicked(2)}>\n              <MinimalStatisticsChart2\n                chartData={StaticCardData.ChartistData2}\n                cardBgColor=\"bg-success\"\n                statistics=\"$1567\"\n                text=\"Total Earning\"\n                iconSide=\"right\"\n              >\n                <Icon.Box size={36} strokeWidth=\"1.3\" color=\"#fff\" />\n              </MinimalStatisticsChart2>\n            </a>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <a onClick={() => this.cardClicked(3)}>\n              <MinimalStatisticsChart2\n                chartData={StaticCardData.ChartistData2}\n                cardBgColor=\"bg-warning\"\n                statistics=\"$4566\"\n                text=\"Total Sales\"\n                iconSide=\"right\"\n              >\n                <Icon.Filter size={36} strokeWidth=\"1.3\" color=\"#fff\" />\n              </MinimalStatisticsChart2>\n            </a>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <a onClick={() => this.cardClicked(4)}>\n              <MinimalStatisticsChart2\n                chartData={StaticCardData.ChartistData2}\n                cardBgColor=\"bg-info\"\n                statistics=\"$4566\"\n                text=\"Total Sales\"\n                iconSide=\"right\"\n              >\n                <Icon.DollarSign size={36} strokeWidth=\"1.3\" color=\"#fff\" />\n              </MinimalStatisticsChart2>\n            </a>\n          </Col>\n        </Row>\n        {/* Discover people & sales analysis */}\n        <Row className=\"row-eq-height\">\n          <Col sm=\"12\" lg=\"6\" xl=\"8\">\n            {/* <SalesAnalysisChartCarda\n                     salesAnalysisData={AdvancedCardData.SalesAnalysisData}\n                     cardTitle=\"Sales Analysis\"\n                     salesText=\"Sales\"\n                     visitText=\"Visits\"\n                     clickText=\"Clicks\"\n                  /> */}\n\n            <Card>\n              <CardBody>\n                <div id=\"wrapper\">\n                  <div id=\"chart-line\">\n                    <Apexchart\n                      type=\"area\"\n                      height=\"200\"\n                      options={this.state.chartOptionsLine1}\n                      series={this.state.series1}\n                    />\n                  </div>\n\n                  <div id=\"chart-line2\">\n                    <Apexchart\n                      type=\"area\"\n                      height=\"200\"\n                      options={this.state.chartOptionsLine2}\n                      series={this.state.series2}\n                    />\n                  </div>\n\n                  <div id=\"chart-area\">\n                    <Apexchart\n                      type=\"area\"\n                      height=\"200\"\n                      options={this.state.chartOptionsArea}\n                      series={this.state.series3}\n                    />\n                  </div>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col sm=\"12\" lg=\"6\" xl=\"4\">\n            <DiscoverPeopleListCard\n              discoverPeopleList={AdvancedCardData.DiscoverPeopleList}\n              cardTitle=\"Peoples\"\n            />\n          </Col>\n        </Row>\n        {/* Fitness charts */}\n        <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"4\">\n            <FitnessStatisticsChart\n              donutChartData={StaticCardData.DonutChartData1}\n              dountChartClass=\"donut1\"\n              textTop=\"Steps\"\n              statisticsTop=\"3261\"\n              textBottom=\"Steps Today's Target\"\n              statisticsBottom=\"5000\"\n              textColor=\"primary\"\n            />\n            <Icon.TrendingUp\n              size={60}\n              strokeWidth=\"1\"\n              className=\"primary icon-dount-center\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <FitnessStatisticsChart\n              donutChartData={StaticCardData.DonutChartData2}\n              dountChartClass=\"donut2\"\n              textTop=\"Distance\"\n              statisticsTop=\"7.6\"\n              statisticsTopUnit=\"miles\"\n              textBottom=\"Miles Today's Target\"\n              statisticsBottom=\"10\"\n              textColor=\"warning\"\n            />\n            <Icon.Zap\n              size={60}\n              strokeWidth=\"1\"\n              className=\"warning icon-dount-center\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <FitnessStatisticsChart\n              donutChartData={StaticCardData.DonutChartData3}\n              dountChartClass=\"donut3\"\n              textTop=\"Calories\"\n              statisticsTop=\"4,025\"\n              statisticsTopUnit=\"kcal\"\n              textBottom=\"kcla Today's Target\"\n              statisticsBottom=\"5000\"\n              textColor=\"danger\"\n            />\n            <Icon.Heart\n              size={60}\n              strokeWidth=\"1\"\n              className=\"danger icon-dount-center\"\n            />\n          </Col>\n        </Row>\n\n        {/* Sales per Visit & Daily Diet Chart */}\n        <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"8\">\n            <SalesPerVisitChartCard\n              salesPerVisitData={AdvancedCardData.SalesPerVisitData}\n              cardTitle=\"Sales Per Visit\"\n              salesText=\"Sales\"\n              visitText=\"Visits\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <DailyDietListCard\n              dailyDietList={AdvancedCardData.DailyDietList}\n              cardTitle=\"Daily Diet\"\n              cardSubTitle=\"Some quick example text to build on the card.\"\n            />\n          </Col>\n        </Row>\n        {/* Misc Cards */}\n        <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"4\">\n            <UserStatisticsChartCard\n              userStatisticData={AdvancedCardData.UserStatisticData}\n              fullName=\"Kevin Sullivan\"\n              designation=\"UX Designer\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <CarouselSliderCard\n              cardTitle=\"Card Titile\"\n              description=\"Sweet halvah dragée jelly-o halvah carrot cake oat cake. Donut jujubes jelly chocolate cake.\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <EarningStatisticsChartCard\n              earningStatisticData={AdvancedCardData.EarningStatisticData}\n              cardTitle=\"Earning\"\n              cardSubTitle=\"Mon 18 - Sun 21\"\n              earningAmount=\"$4295.36\"\n              earningText=\"Total Earnings\"\n            />\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default AnalyticsDashboard;\n"]},"metadata":{},"sourceType":"module"}