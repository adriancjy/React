{"ast":null,"code":"import _classCallCheck from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\REACT APEX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\REACT APEX\\\\src\\\\views\\\\dashboard\\\\analyticsDashboard.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport * as Icon from \"react-feather\";\nimport { StaticCardData } from \"../cards/staticCardData\";\nimport { AdvancedCardData } from \"../cards/advancedCardData\";\nimport MinimalStatisticsChart2 from \"../../components/cards/minimalStatisticsWithChart2Card\";\nimport DiscoverPeopleListCard from \"../../components/cards/discoverPeopleListCard\";\nimport SalesAnalysisChartCarda from \"../../components/cards/salesAnalysisChartCard\";\nimport FitnessStatisticsChart from \"../../components/cards/fitnessStatisticsWithChartCard\";\nimport SalesPerVisitChartCard from \"../../components/cards/salesPerVisitChartCard\";\nimport DailyDietListCard from \"../../components/cards/dailyDietListCard\";\nimport UserStatisticsChartCard from \"../../components/cards/userStatisticsChartCard\";\nimport CarouselSliderCard from \"../../components/cards/carouselSliderCard\";\nimport EarningStatisticsChartCard from \"../../components/cards/earningStatisticsChartCard\";\nimport Apexchart from \"react-apexcharts\";\nimport { sgconsumerseries, sgconsumerpriceseries, sgyearprice } from \"../charts/echartjs/agedeathData\";\n\nvar AnalyticsDashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnalyticsDashboard, _Component);\n\n  _createClass(AnalyticsDashboard, [{\n    key: \"cardClicked\",\n    value: function cardClicked(val) {\n      switch (val) {\n        case 1:\n          this.setState({\n            series1: sgconsumerseries,\n            series2: sgconsumerpriceseries,\n            series3: sgyearprice\n          });\n          break;\n\n        case 2:\n          alert(\"2\");\n          break;\n\n        case 3:\n          alert(\"3\");\n          break;\n\n        case 4:\n          alert(\"4\");\n          break;\n      }\n    }\n  }]);\n\n  function AnalyticsDashboard(props) {\n    var _this;\n\n    _classCallCheck(this, AnalyticsDashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnalyticsDashboard).call(this, props));\n    _this.state = {\n      series1: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      series2: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n      series3: [{\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }],\n\n      /*\n            newseries1: [{\n              data: [19.8, 19.4, 18.9, 18.5, 18.1, 17.8, 17.5, 17.3, 17.0]\n            }],\n            newseries2: [{\n              data: [7.36, 7.73, 8.12, 8.45, 8.84, 9.16, 9.36, 9.87, 10.21],\n            }],\n            newseries3: [{\n              data: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016'],\n            }],\n      \n            */\n      chartOptionsLine1: {\n        chart: {\n          id: 'tw',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Cigarettes Per Smoker Per Day',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#5C6BC0']\n      },\n      chartOptionsLine2: {\n        chart: {\n          id: 'tw',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Price of a 20-Pack of Cigarettes (US$)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#00BCD4']\n      },\n      chartOptionsArea: {\n        chart: {\n          id: 'yt',\n          group: 'social'\n        },\n        title: {\n          text: 'Average Amount of Money Spent on Cigarettes Per Year in (US$)',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'category',\n          categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n        },\n        yaxis: {\n          show: false,\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          size: 6,\n          hover: {\n            size: 10\n          }\n        },\n        colors: ['#E53935'] //colors: ['#00E396'],\n\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AnalyticsDashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        xl: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.cardClicked(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(MinimalStatisticsChart2, {\n        chartData: StaticCardData.ChartistData2,\n        cardBgColor: \"bg-danger\"\n        /* Put money value from API */\n        ,\n        statistics: \"$2156\",\n        text: \"Account Balance\",\n        iconSide: \"right\",\n        onClick: this.cardClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Icon.PieChart, {\n        size: 36,\n        strokeWidth: \"1.3\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        xl: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.cardClicked(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(MinimalStatisticsChart2, {\n        chartData: StaticCardData.ChartistData2,\n        cardBgColor: \"bg-success\",\n        statistics: \"$1567\",\n        text: \"Deposits this month\",\n        iconSide: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Icon.Box, {\n        size: 36,\n        strokeWidth: \"1.3\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        xl: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.cardClicked(3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(MinimalStatisticsChart2, {\n        chartData: StaticCardData.ChartistData2,\n        cardBgColor: \"bg-warning\",\n        statistics: \"$4566\",\n        text: \"Spending this month\",\n        iconSide: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Icon.Filter, {\n        size: 36,\n        strokeWidth: \"1.3\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        xl: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.cardClicked(4);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(MinimalStatisticsChart2, {\n        chartData: StaticCardData.ChartistData2,\n        cardBgColor: \"bg-info\",\n        statistics: \"$4566\",\n        text: \"Net profit/loss this month\",\n        iconSide: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Icon.DollarSign, {\n        size: 36,\n        strokeWidth: \"1.3\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))))), React.createElement(Row, {\n        className: \"row-eq-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsLine1,\n        series: this.state.series1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-line2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsLine2,\n        series: this.state.series2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Apexchart, {\n        type: \"area\",\n        height: \"200\",\n        options: this.state.chartOptionsArea,\n        series: this.state.series3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return AnalyticsDashboard;\n}(Component);\n\nexport default AnalyticsDashboard;","map":{"version":3,"sources":["D:/REACT APEX/src/views/dashboard/analyticsDashboard.js"],"names":["React","Component","Fragment","Row","Col","Card","CardTitle","CardHeader","CardBody","Icon","StaticCardData","AdvancedCardData","MinimalStatisticsChart2","DiscoverPeopleListCard","SalesAnalysisChartCarda","FitnessStatisticsChart","SalesPerVisitChartCard","DailyDietListCard","UserStatisticsChartCard","CarouselSliderCard","EarningStatisticsChartCard","Apexchart","sgconsumerseries","sgconsumerpriceseries","sgyearprice","AnalyticsDashboard","val","setState","series1","series2","series3","alert","props","state","data","chartOptionsLine1","chart","id","group","title","text","align","xaxis","type","categories","yaxis","show","axisTicks","markers","size","hover","colors","chartOptionsLine2","chartOptionsArea","cardClicked","ChartistData2"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\n\nimport * as Icon from \"react-feather\";\n\nimport { StaticCardData } from \"../cards/staticCardData\";\nimport { AdvancedCardData } from \"../cards/advancedCardData\";\n\nimport MinimalStatisticsChart2 from \"../../components/cards/minimalStatisticsWithChart2Card\";\n\nimport DiscoverPeopleListCard from \"../../components/cards/discoverPeopleListCard\";\nimport SalesAnalysisChartCarda from \"../../components/cards/salesAnalysisChartCard\";\n\nimport FitnessStatisticsChart from \"../../components/cards/fitnessStatisticsWithChartCard\";\n\nimport SalesPerVisitChartCard from \"../../components/cards/salesPerVisitChartCard\";\nimport DailyDietListCard from \"../../components/cards/dailyDietListCard\";\n\nimport UserStatisticsChartCard from \"../../components/cards/userStatisticsChartCard\";\nimport CarouselSliderCard from \"../../components/cards/carouselSliderCard\";\nimport EarningStatisticsChartCard from \"../../components/cards/earningStatisticsChartCard\";\n\nimport Apexchart from \"react-apexcharts\";\nimport {sgconsumerseries, sgconsumerpriceseries, sgyearprice} from \"../charts/echartjs/agedeathData\";\n\nclass AnalyticsDashboard extends Component {\n  cardClicked(val) {\n    switch (val) {\n      case 1:\n            this.setState({\n               series1: sgconsumerseries,\n               series2: sgconsumerpriceseries,\n               series3: sgyearprice,               \n             })\n        break;\n      case 2:\n        alert(\"2\");\n        break;\n      case 3:\n        alert(\"3\");\n        break;\n      case 4:\n        alert(\"4\");\n        break;\n    }\n  }\n\n  constructor(props) {\n   super(props);\n   this.state = {\n\n   \n     series1: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n     }],\n     series2: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n     }],\n     series3: [{\n       data: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n     }],\n     /*\n           newseries1: [{\n             data: [19.8, 19.4, 18.9, 18.5, 18.1, 17.8, 17.5, 17.3, 17.0]\n           }],\n           newseries2: [{\n             data: [7.36, 7.73, 8.12, 8.45, 8.84, 9.16, 9.36, 9.87, 10.21],\n           }],\n           newseries3: [{\n             data: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016'],\n           }],\n     \n           */\n\n     chartOptionsLine1: {\n       chart: {\n         id: 'tw',\n         group: 'social',\n       },\n       title: {\n         text: 'Average Cigarettes Per Smoker Per Day',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n       colors: ['#5C6BC0'],\n     },\n     chartOptionsLine2: {\n       chart: {\n         id: 'tw',\n         group: 'social',\n       },\n       title: {\n         text: 'Average Price of a 20-Pack of Cigarettes (US$)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n       colors: ['#00BCD4'],\n\n     },\n     chartOptionsArea: {\n       chart: {\n         id: 'yt',\n         group: 'social',\n       },\n       title: {\n         text: 'Average Amount of Money Spent on Cigarettes Per Year in (US$)',\n         align: 'left'\n       },\n       xaxis: {\n         type: 'category',\n         categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016']\n       },\n       yaxis: {\n         show: false,\n         axisTicks: {\n           show: false\n         },\n       },\n       markers: {\n         size: 6,\n         hover: {\n           size: 10\n         }\n       },\n\n       colors: ['#E53935'],\n       //colors: ['#00E396'],\n\n     }\n   }\n\n }\n\n  render() {\n    return (\n      <Fragment>\n        {/* Statistics \n        can put things like balance, deposits this month, spending this month, net profit/loss this month\n        */}\n\n        <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <a onClick={() => this.cardClicked(1)}>\n              <MinimalStatisticsChart2\n                chartData={StaticCardData.ChartistData2}\n                cardBgColor=\"bg-danger\"\n                /* Put money value from API */\n                statistics=\"$2156\"\n                text=\"Account Balance\"\n                iconSide=\"right\"\n                onClick={this.cardClicked}\n              >\n                <Icon.PieChart size={36} strokeWidth=\"1.3\" color=\"#fff\" />\n              </MinimalStatisticsChart2>\n            </a>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <a onClick={() => this.cardClicked(2)}>\n              <MinimalStatisticsChart2\n                chartData={StaticCardData.ChartistData2}\n                cardBgColor=\"bg-success\"\n                statistics=\"$1567\"\n                text=\"Deposits this month\"\n                iconSide=\"right\"\n              >\n                <Icon.Box size={36} strokeWidth=\"1.3\" color=\"#fff\" />\n              </MinimalStatisticsChart2>\n            </a>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <a onClick={() => this.cardClicked(3)}>\n              <MinimalStatisticsChart2\n                chartData={StaticCardData.ChartistData2}\n                cardBgColor=\"bg-warning\"\n                statistics=\"$4566\"\n                text=\"Spending this month\"\n                iconSide=\"right\"\n              >\n                <Icon.Filter size={36} strokeWidth=\"1.3\" color=\"#fff\" />\n              </MinimalStatisticsChart2>\n            </a>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <a onClick={() => this.cardClicked(4)}>\n              <MinimalStatisticsChart2\n                chartData={StaticCardData.ChartistData2}\n                cardBgColor=\"bg-info\"\n                statistics=\"$4566\"\n                text=\"Net profit/loss this month\"\n                iconSide=\"right\"\n              >\n                <Icon.DollarSign size={36} strokeWidth=\"1.3\" color=\"#fff\" />\n              </MinimalStatisticsChart2>\n            </a>\n          </Col>\n        </Row>\n        {/* Discover people & sales analysis */}\n        <Row className=\"row-eq-height\">\n        {/* This is the orignal col sizing\n        <Col sm=\"12\" lg=\"6\" xl=\"8\"> */}\n          <Col>\n            {/* <SalesAnalysisChartCarda\n                     salesAnalysisData={AdvancedCardData.SalesAnalysisData}\n                     cardTitle=\"Sales Analysis\"\n                     salesText=\"Sales\"\n                     visitText=\"Visits\"\n                     clickText=\"Clicks\"\n                  /> */}\n\n               {/* insert a real time chart instead */}\n            <Card>\n              <CardBody>\n                <div id=\"wrapper\">\n                  <div id=\"chart-line\">\n                    <Apexchart\n                      type=\"area\"\n                      height=\"200\"\n                      options={this.state.chartOptionsLine1}\n                      series={this.state.series1}\n                    />\n                  </div>\n\n                  <div id=\"chart-line2\">\n                    <Apexchart\n                      type=\"area\"\n                      height=\"200\"\n                      options={this.state.chartOptionsLine2}\n                      series={this.state.series2}\n                    />\n                  </div>\n\n                  <div id=\"chart-area\">\n                    <Apexchart\n                      type=\"area\"\n                      height=\"200\"\n                      options={this.state.chartOptionsArea}\n                      series={this.state.series3}\n                    />\n                  </div>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          {/* <Col sm=\"12\" lg=\"6\" xl=\"4\">\n            <DiscoverPeopleListCard\n              discoverPeopleList={AdvancedCardData.DiscoverPeopleList}\n              cardTitle=\"Peoples\"\n            />\n          </Col>\n        </Row> */}\n        {/* Fitness charts */}\n        {/* <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"4\">\n            <FitnessStatisticsChart\n              donutChartData={StaticCardData.DonutChartData1}\n              dountChartClass=\"donut1\"\n              textTop=\"Steps\"\n              statisticsTop=\"3261\"\n              textBottom=\"Steps Today's Target\"\n              statisticsBottom=\"5000\"\n              textColor=\"primary\"\n            />\n            <Icon.TrendingUp\n              size={60}\n              strokeWidth=\"1\"\n              className=\"primary icon-dount-center\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <FitnessStatisticsChart\n              donutChartData={StaticCardData.DonutChartData2}\n              dountChartClass=\"donut2\"\n              textTop=\"Distance\"\n              statisticsTop=\"7.6\"\n              statisticsTopUnit=\"miles\"\n              textBottom=\"Miles Today's Target\"\n              statisticsBottom=\"10\"\n              textColor=\"warning\"\n            />\n            <Icon.Zap\n              size={60}\n              strokeWidth=\"1\"\n              className=\"warning icon-dount-center\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <FitnessStatisticsChart\n              donutChartData={StaticCardData.DonutChartData3}\n              dountChartClass=\"donut3\"\n              textTop=\"Calories\"\n              statisticsTop=\"4,025\"\n              statisticsTopUnit=\"kcal\"\n              textBottom=\"kcla Today's Target\"\n              statisticsBottom=\"5000\"\n              textColor=\"danger\"\n            />\n            <Icon.Heart\n              size={60}\n              strokeWidth=\"1\"\n              className=\"danger icon-dount-center\"\n            />\n          </Col>\n        </Row> */}\n\n        {/* Sales per Visit & Daily Diet Chart */}\n        {/* <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"8\">\n            <SalesPerVisitChartCard\n              salesPerVisitData={AdvancedCardData.SalesPerVisitData}\n              cardTitle=\"Sales Per Visit\"\n              salesText=\"Sales\"\n              visitText=\"Visits\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <DailyDietListCard\n              dailyDietList={AdvancedCardData.DailyDietList}\n              cardTitle=\"Daily Diet\"\n              cardSubTitle=\"Some quick example text to build on the card.\"\n            />\n          </Col>\n        </Row> */}\n        {/* Misc Cards */}\n        {/* <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"4\">\n            <UserStatisticsChartCard\n              userStatisticData={AdvancedCardData.UserStatisticData}\n              fullName=\"Kevin Sullivan\"\n              designation=\"UX Designer\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <CarouselSliderCard\n              cardTitle=\"Card Titile\"\n              description=\"Sweet halvah dragée jelly-o halvah carrot cake oat cake. Donut jujubes jelly chocolate cake.\"\n            />\n          </Col>\n          <Col sm=\"12\" md=\"4\">\n            <EarningStatisticsChartCard\n              earningStatisticData={AdvancedCardData.EarningStatisticData}\n              cardTitle=\"Earning\"\n              cardSubTitle=\"Mon 18 - Sun 21\"\n              earningAmount=\"$4295.36\"\n              earningText=\"Total Earnings\"\n            />\n          </Col> */}\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default AnalyticsDashboard;\n"]},"metadata":{},"sourceType":"module"}